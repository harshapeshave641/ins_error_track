{"version":3,"file":"RollbarContext.js","sources":["../src/rollbar-context.js"],"sourcesContent":["'use client';\n\nimport { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Context, getRollbarFromContext } from './provider';\n\nexport class RollbarContext extends Component {\n  static propTypes = {\n    context: PropTypes.string.isRequired,\n    onRender: PropTypes.bool,\n    children: PropTypes.node,\n  };\n\n  static defaultProps = {\n    onRender: false,\n  };\n\n  static contextType = Context;\n\n  firstRender = true;\n\n  constructor(props) {\n    super(props);\n    this.state = { previousContext: null };\n  }\n\n  changeContext = (storePrevious = true) => {\n    const rollbar = getRollbarFromContext(this.context);\n    const { context } = this.props;\n    if (storePrevious) {\n      this.setState({ previousContext: rollbar.options.payload.context });\n    }\n    rollbar.configure({ payload: { context } });\n  };\n\n  componentDidMount() {\n    const { onRender } = this.props;\n    if (!onRender) {\n      this.changeContext(true);\n    }\n  }\n\n  componentDidUpdate() {\n    const { onRender } = this.props;\n    if (!onRender) {\n      this.changeContext(false);\n    }\n  }\n\n  componentWillUnmount() {\n    const rollbar = getRollbarFromContext(this.context);\n    const { previousContext } = this.state;\n    rollbar.configure({ payload: { context: previousContext } });\n  }\n\n  render() {\n    const { onRender } = this.props;\n    if (onRender && this.firstRender) {\n      this.changeContext(true);\n    }\n    this.firstRender = false;\n    return this.props.children;\n  }\n}\n"],"names":["RollbarContext","_classCallCheck","_this","_defineProperty","previousContext","payload","context","_createClass","onRender"],"mappings":";;;;;;AAMaA;;;AAeQ;AAAAC;AACjBC;AAAaC;AAHGA;AAOwB;AACxC;AACA;AACA;;AACkBC;AAAiD;AACnE;;AACoBC;AAAWC;AAAQ;AAAE;;;AAT1BF;;AAAwB;AACzC;AAACG;;;AAYC;;AAEE;AACF;AACF;AAAC;;;AAGC;;AAEE;AACF;AACF;AAAC;;;AAGC;AACA;;AACoBF;AAAWC;AAAyB;AAAE;AAC5D;AAAC;;;AAGC;AACA;AACE;AACF;;AAEA;AACF;AAAC;AAAA;AAAA;AACFH;AAvDGG;;;AAGF;AAACH;AAGCK;AACF;AAACL;;"}